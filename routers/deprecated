 #переписать
@shedule_plan_router.post("/shedule/plan/export/", deprecated=True, summary="Переделать")
async def add_shedule_plan(item:ShedulePlan) -> ShedulePlan: 

    query = """INSERT INTO "OOP" (code, direction, eduction_profile,education_level) 
    SELECT :code, :direction, :eduction_profile, :education_level
    WHERE
    NOT EXISTS (
    SELECT CAST(:code AS VARCHAR) FROM "OOP" WHERE code = :code) 
    RETURNING  id """
    values = {"code":item.oop.code,"direction":item.oop.direction, 
    "eduction_profile":item.oop.eduction_profile,"education_level":item.oop.education_level.name}

    oop_id =  await database.execute(query=query, values=values)
    print(oop_id)
    if oop_id == None:
        query = oop_table.select().where(oop_table.c.code == item.oop.code)
        oop = await database.fetch_one(query)
        oop_id = tuple(oop.values())[0]
    print(oop_id)

    query = """INSERT INTO "ShedulePlan" (code, recruitment_year, education_form, period,oop) 
    SELECT :code, :recruitment_year, :education_form, :period, :oop
    WHERE
    NOT EXISTS (
    SELECT CAST(:code AS VARCHAR) FROM "ShedulePlan" WHERE code = :code) 
    RETURNING  id """
    values = {"code":item.code,"recruitment_year":item.recruitment_year, 
    "education_form":item.form.name,"period":item.period ,"oop":oop_id}
    
    shedule_plan_id =  await database.execute(query=query, values=values)
    if shedule_plan_id == None:
        query = shedule_plan_table.select().where(shedule_plan_table.c.code == item.code)
        shedule_plan = await database.fetch_one(query)
        shedule_plan_id = tuple(shedule_plan.values())[0]
    print(shedule_plan_id)

    for discipline in item.disciplines:
        query = """INSERT INTO "Disciplines" (name) 
        SELECT :name,
        WHERE
        NOT EXISTS (
        SELECT CAST(:name AS VARCHAR) FROM "Disciplines" WHERE name = :name) 
        RETURNING  id """
        values = {"name":discipline.name}
        discipline_id =  await database.execute(query=query, values=values)

        if discipline_id == None:
            query = disciplines_table.select().where(disciplines_table.c.name == discipline.name)
            discipline = await database.fetch_one(query)
            discipline_id = tuple(discipline.values())[0]
        print(discipline_id)

        query = """INSERT INTO "DisciplineInShedulePlan" (shedule_plan, discipline) 
        SELECT :shedule_plan, :discipline 
        RETURNING  id """
        values = {"shedule_plan":shedule_plan_id,"discipline":discipline_id}
        await database.execute(query=query, values=values)

        print(discipline_id)
      
    return item